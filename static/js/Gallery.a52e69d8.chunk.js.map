{"version":3,"file":"static/js/Gallery.a52e69d8.chunk.js","mappings":"qMAEaA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OACI,iBAAKC,UAAU,aAAf,WACI,gBAAKA,UAAU,kBAAkBC,IAAKF,EAAO,GAAIG,IAAI,UACrD,iBAAKF,UAAU,qBAAf,WACI,gBAAKA,UAAU,mBAAmBC,IAAKF,EAAO,GAAIG,IAAI,UACtD,gBAAKF,UAAU,mBAAmBC,IAAKF,EAAO,GAAIG,IAAI,UACtD,gBAAKF,UAAU,mBAAmBC,IAAKF,EAAO,GAAIG,IAAI,aAE1D,wBAAKJ,QCTJK,EAAW,WACpB,OACI,iBAAKH,UAAU,aAAf,WACI,gBAAKI,MAAO,CAAC,MAAS,SAAUJ,UAAU,8BAC1C,iBAAKA,UAAU,qBAAf,WACI,gBAAKA,UAAU,+BACf,gBAAKA,UAAU,+BACf,gBAAKA,UAAU,kCAEnB,eAAIA,UAAU,gBAAd,uBCLNK,EAAO,CACT,CAAE,KAAQ,sBACV,CAAE,KAAQ,4BACV,CAAE,KAAQ,4BACV,CAAE,KAAQ,sEACV,CAAE,KAAQ,yCAiEd,MA9DA,WACI,MAAkCC,EAAAA,UAAe,GAAjD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,EAAAA,SAAe,GAAvC,eAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,EAAAA,SAAe,GAAnD,eAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,EAAAA,SAAe,IAAnD,eAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAsCR,EAAAA,SAAe,IAArD,eAAOS,EAAP,KAAoBC,EAApB,KAkBA,OAhBAV,EAAAA,WAAgB,WACZE,GAAa,GACb,IAAMS,EAAWN,EAAU,mBAAeA,GAAe,GACzDO,MAAM,iEAAD,OAAkET,EAAO,EAAzE,oBAAsFQ,IAAYE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClHF,MAAK,SAAAE,GACFP,EAAcO,GACdC,QAAQC,IAAIF,MACbG,OAAM,SAAAC,GACLH,QAAQI,KAAKD,GACbE,MAAM,wIAETC,SAAQ,WACLpB,GAAa,QAEtB,CAACG,EAAYF,KAGZ,iBAAKT,UAAU,MAAf,WACI,oKACA,iBAAKA,UAAU,MAAf,WACI,eAAIA,UAAU,OAAd,SACKK,EAAKwB,KAAI,SAACC,EAAKC,GAAN,OAAY,eAClB/B,UAAWW,IAAeoB,EAAI,SAAW,GAEzCC,QAAS,WAAQpB,EAAcmB,GAAIrB,EAAQ,IAHzB,SAGiCoB,EAAIhC,MADlDgC,EAAIhC,YAGjB,kBAAOE,UAAU,eAAeiC,YAAY,+FACxCC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAeoB,EAAEC,OAAOH,cAEjD,gBAAKlC,UAAU,UAAf,SACKO,GACK,OAAI,IAAI+B,MAAM,IAAIT,KAAI,SAACU,EAAGR,GAAJ,OAAU,SAAC5B,EAAD,GAAe4B,MAC/ClB,EACG2B,QAAO,SAAAV,GAAG,OAAIA,EAAIhC,KAAK2C,cAAcC,SAAS3B,EAAY4B,wBAC1Dd,KAAI,SAAAC,GAAG,OACJ,SAACjC,EAAD,CAEIC,KAAMgC,EAAIhC,KACVC,OAAQ+B,EAAIc,QAFPd,EAAIe,UAO7B,eAAI7C,UAAU,aAAd,UACK,OAAI,IAAIsC,MAAqB,IAAf3B,EAAmB,EAAI,IAAIkB,KAAI,SAACU,EAAGR,GAAJ,OAAU,eAEpD/B,UAAWS,IAASsB,EAAI,SAAW,GACnCC,QAAS,WAAQtB,EAAQqB,IAH2B,SAItDA,EAAI,GAHGA","sources":["Gallery/Collection.jsx","Gallery/Skeleton.jsx","Gallery/index.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport const Collection = ({ name, images }) => {\r\n    return (\r\n        <div className=\"collection\">\r\n            <img className=\"collection__big\" src={images[0]} alt=\"Item\" />\r\n            <div className=\"collection__bottom\">\r\n                <img className=\"collection__mini\" src={images[1]} alt=\"Item\" />\r\n                <img className=\"collection__mini\" src={images[2]} alt=\"Item\" />\r\n                <img className=\"collection__mini\" src={images[3]} alt=\"Item\" />\r\n            </div>\r\n            <h4>{name}</h4>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport const Skeleton = () => {\r\n    return (\r\n        <div className=\"collection\">\r\n            <img style={{\"width\": \"250px\"}} className=\"collection__big skeleton\" />\r\n            <div className=\"collection__bottom\">\r\n                <img className=\"collection__mini skeleton\" />\r\n                <img className=\"collection__mini skeleton\" />\r\n                <img className=\"collection__mini skeleton\" />\r\n            </div>\r\n            <h4 className='skeleton_text'>lorem</h4>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './index.scss';\r\nimport { Collection } from './Collection'\r\nimport { Skeleton } from './Skeleton'\r\n\r\n\r\nconst cats = [\r\n    { \"name\": \"Все\" },\r\n    { \"name\": \"Море\" },\r\n    { \"name\": \"Горы\" },\r\n    { \"name\": \"Архитектура\" },\r\n    { \"name\": \"Города\" }\r\n]\r\n\r\nfunction Gallery() {\r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n    const [page, setPage] = React.useState(0)\r\n    const [categoryId, setCategoryId] = React.useState(0)\r\n    const [collection, setCollection] = React.useState([])\r\n    const [searchValue, setSearchValue] = React.useState('')\r\n\r\n    React.useEffect(() => {\r\n        setIsLoading(true)\r\n        const category = categoryId ? `category=${categoryId}` : ''\r\n        fetch(`https://634bdb48317dc96a308c1d66.mockapi.io/photoGallery?page=${page + 1}&limit=3&${category}`).then(res => res.json())\r\n            .then(json => {\r\n                setCollection(json)\r\n                console.log(json)\r\n            }).catch(error => {\r\n                console.warn(error)\r\n                alert('Не удалось получить фото')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }, [categoryId, page])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Моя коллекция фотографий</h1>\r\n            <div className=\"top\">\r\n                <ul className=\"tags\">\r\n                    {cats.map((obj, i) => <li\r\n                        className={categoryId === i ? 'active' : ''}\r\n                        key={obj.name}\r\n                        onClick={() => { setCategoryId(i); setPage(0) }} >{obj.name}</li>)}\r\n                </ul>\r\n                <input className=\"search-input\" placeholder=\"Поиск по названию\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)} />\r\n            </div>\r\n            <div className=\"content\">\r\n                {isLoading\r\n                    ? [...new Array(3)].map((_, i) => <Skeleton key={i} />)\r\n                    : collection\r\n                        .filter(obj => obj.name.toLowerCase().includes(searchValue.toLocaleLowerCase()))\r\n                        .map(obj =>\r\n                            <Collection\r\n                                key={obj.id}\r\n                                name={obj.name}\r\n                                images={obj.photos}\r\n                            />\r\n                        )\r\n                }\r\n            </div>\r\n            <ul className=\"pagination\">\r\n                {[...new Array(categoryId !== 0 ? 3 : 5)].map((_, i) => <li\r\n                    key={i}\r\n                    className={page === i ? \"active\" : \"\"}\r\n                    onClick={() => { setPage(i) }}\r\n                >{i + 1}</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gallery;"],"names":["Collection","name","images","className","src","alt","Skeleton","style","cats","React","isLoading","setIsLoading","page","setPage","categoryId","setCategoryId","collection","setCollection","searchValue","setSearchValue","category","fetch","then","res","json","console","log","catch","error","warn","alert","finally","map","obj","i","onClick","placeholder","value","onChange","e","target","Array","_","filter","toLowerCase","includes","toLocaleLowerCase","photos","id"],"sourceRoot":""}